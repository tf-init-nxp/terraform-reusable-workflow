name: 'Terraform Format and Security Validations'

on:
  workflow_call:
    inputs:
      terraform_version:
        description: 'Terraform Version to be used'
        required: true
        type: string

jobs:
  terraform-format-security-validations:
    name: 'Terraform Format - Security Validations'
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3.5.3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
      with:
        terraform_version: ${{ inputs.terraform_version }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -backend=false

    # Validate terraform files
    - name: Terraform Validate
      run: terraform validate

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check -recursive
    
    # Perform a security scan of the terraform code using checkov
    - name: Run Checkov action
      id: checkov
      uses: bridgecrewio/checkov-action@v12.2401.0
      with: 
        framework: terraform
        output_format: cli #,sarif
        download_external_modules: true
        soft_fail: true
        #output_file_path: console,results.sarif
        #download_external_modules: true

    # Upload results to GitHub Advanced Security
    #- name: Upload SARIF file
    #  if: success() || failure()
    #  uses: github/codeql-action/upload-sarif@v2
    #  with:
    #    sarif_file: results.sarif
    #    category: checkov
